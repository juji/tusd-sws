#!/bin/bash

# Post-finish hook to rename file to original filename and remove .info file
# This preserves the original filename with extension

# Construct paths
INFO_FILE="/srv/tusd-data/data/${TUS_ID}.info"
DATA_FILE="/srv/tusd-data/data/${TUS_ID}"

# Check if .info file exists
if [ ! -f "$INFO_FILE" ]; then
    echo '{"error": "Info file not found"}' >&2
    echo '{}'
    exit 1
fi

# Extract metadata from .info file using jq or grep
if command -v jq >/dev/null 2>&1; then
    # Use jq if available
    FILENAME=$(jq -r '.MetaData.filename // empty' "$INFO_FILE")
    FILEPATH=$(jq -r '.Storage.Path // empty' "$INFO_FILE")
else
    # Fallback to grep/sed
    FILENAME=$(grep -o '"filename":"[^"]*"' "$INFO_FILE" | sed 's/"filename":"//;s/"//')
    FILEPATH=$(grep -o '"Path":"[^"]*"' "$INFO_FILE" | sed 's/"Path":"//;s/"//')
fi

# If filename found, rename the file
if [ -n "$FILENAME" ] && [ -n "$FILEPATH" ]; then
    DIR_PATH=$(dirname "$FILEPATH")
    NEW_PATH="$DIR_PATH/$FILENAME"

    # Check if target file already exists
    if [ -f "$NEW_PATH" ]; then
        echo "{\"error\": \"Target file $NEW_PATH already exists\"}" >&2
        echo '{}'
        exit 1
    fi

    # Rename the file
    if mv "$FILEPATH" "$NEW_PATH"; then
        # Remove the .info file
        rm -f "$INFO_FILE"
        echo '{}'
        exit 0
    else
        echo "{\"error\": \"Failed to rename file\"}" >&2
        echo '{}'
        exit 1
    fi
else
    # No metadata found, just remove .info file
    rm -f "$INFO_FILE"
fi

# Return success
echo '{}'